{"ast":null,"code":"var _jsxFileName = \"/home/roaa/301/can-of-books/can-of-books-frontend/src/myFavoriteBooks.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport { Card, Button } from 'react-bootstrap';\nimport \"./myFavoriteBooks.css\";\nimport axios from \"axios\"; // import { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { withAuth0 } from \"@auth0/auth0-react\"; // import Carousel from \"react-bootstrap/Carousel\";\n\nimport BookFormModal from \"./component/BookFormModal\";\nimport UpdateBookForm from \"./component/UpdateBookForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nclass MyFavoriteBooks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateModal = () => {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.show = () => {\n      this.setState({\n        showUpdateModal: !this.state.showUpdateModal\n      });\n    };\n\n    this.updateBook = async e => {\n      e.preventDefault();\n      const bookData = {\n        name: e.target.name.value,\n        description: e.target.description.value,\n        status: e.target.status.value,\n        email: this.props.auth0.user.email\n      };\n      console.log(bookData);\n      let updatedBook = await axios.put(`http://localhost:3010/updateBook/${index}`, bookData); //    this.setState({\n      //   data:catsData.data\n      // })\n    };\n\n    this.getBookDataFromForm = event => {\n      event.preventDefault();\n      const bookInfo2 = {\n        name: event.target.name.value,\n        description: event.target.description.value,\n        status: event.target.status.value,\n        email: this.props.auth0.user.email\n      };\n      let url = `http://localhost:3010/addbook`;\n      axios.post(url, bookInfo2).then(result => {\n        this.setState({\n          data: result.data\n        });\n      });\n      console.log(bookInfo2);\n    };\n\n    this.deleteBook = async index => {\n      const userName = {\n        email: this.props.auth0.user.email\n      };\n      let result = await axios.delete(`http://localhost:3010/deletebook/${index}`, {\n        params: userName\n      });\n      this.setState({\n        data: result.data\n      });\n    };\n\n    this.componentDidMount = () => {\n      let server = process.env.REACT_APP_SERVER_URL;\n      let bookReqUrl = `${server}/books?email=${this.props.auth0.user.email}`;\n      console.log(server);\n      console.log(this.props.auth0.user.email);\n      axios.get(bookReqUrl).then(bookResult => {\n        let dataBook = bookResult.data;\n        this.setState({\n          data: dataBook\n        });\n      }); // console.log(this.state.data);\n      // console.log(this.state.dataBook);\n    };\n\n    this.state = {\n      data: [],\n      showModal: false,\n      showUpdateModal: false,\n      newBook: {},\n      name: \"\",\n      description: \"\",\n      status: \"\",\n      index: 0,\n      item: ''\n    };\n  }\n\n  render() {\n    // const { isAuthenticated } = this.props.auth0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Favorite Books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is a collection of my favorite books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BookFormModal, {\n        updateBook: this.updateModal,\n        flag: this.state.showModal,\n        bookInfo: this.getBookDataFromForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }, this), this.updateONBook && /*#__PURE__*/_jsxDEV(UpdateBookForm, {\n        item: this.state.item,\n        show: this.show,\n        showUpdateModal: this.state.showUpdateModal,\n        bookInfo: this.getBookDataFromForm,\n        updateBook: this.updateBook,\n        handleName: this.setName,\n        handleDesc: this.setDescription,\n        handleStatus: this.setStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), this.state.data.length !== 0 && this.state.data.map((item, indx) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => this.deleteBook(indx),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => this.updateONBook(indx, item),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"text-muted\",\n            children: item.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, indx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withAuth0(MyFavoriteBooks);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/roaa/301/can-of-books/can-of-books-frontend/src/myFavoriteBooks.js"],"names":["React","Jumbotron","Card","Button","axios","withAuth0","BookFormModal","UpdateBookForm","require","config","MyFavoriteBooks","Component","constructor","props","updateModal","setState","showModal","state","show","showUpdateModal","updateBook","e","preventDefault","bookData","name","target","value","description","status","email","auth0","user","console","log","updatedBook","put","index","getBookDataFromForm","event","bookInfo2","url","post","then","result","data","deleteBook","userName","delete","params","componentDidMount","server","process","env","REACT_APP_SERVER_URL","bookReqUrl","get","bookResult","dataBook","newBook","item","render","updateONBook","setName","setDescription","setStatus","length","map","indx"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport {Card,Button} from 'react-bootstrap';\nimport \"./myFavoriteBooks.css\";\nimport axios from \"axios\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\nimport { withAuth0 } from \"@auth0/auth0-react\";\n// import Carousel from \"react-bootstrap/Carousel\";\nimport BookFormModal from \"./component/BookFormModal\";\nimport UpdateBookForm from \"./component/UpdateBookForm\";\n\nrequire(\"dotenv\").config();\n\nclass MyFavoriteBooks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      showModal: false,\n      showUpdateModal:false,\n      newBook:{},\n      name:\"\",\n      description:\"\",\n      status:\"\",\n      index:0,\n      item:'',\n    };\n  }\n  \n  updateModal=()=>{\n    this.setState({\n      showModal:!this.state.showModal,\n    });\n  }\n  \nshow=()=>{\n  this.setState({\n    showUpdateModal:!this.state.showUpdateModal,\n  })\n}\n\n\n  // setName = (e) => {\n  //   this.setState({\n  //    name: e.target.value\n  //   })\n  // }\n\n  // setDescription = (e) => {\n  //   this.setState({\n  //     description: e.target.value\n  //   })\n  // }\n  // setStatus = (e) => {\n  //   this.setState({\n  //     status: e.target.value\n  //   })\n  // }\n  updateBook = async(e) => {\n    e.preventDefault();\n    const bookData = {\n      name: e.target.name.value,\n      description: e.target.description.value,\n      status:e.target.status.value,\n      email:this.props.auth0.user.email\n    }\nconsole.log(bookData);\n    let updatedBook = await axios.put(`http://localhost:3010/updateBook/${index}`,bookData)\n\n//    this.setState({\n//   data:catsData.data\n// })\n  }\n  getBookDataFromForm=(event)=>{\n    event.preventDefault();\n    \n    const bookInfo2 = {\n      name: event.target.name.value,\n      description: event.target.description.value,\n      status:event.target.status.value,\n      email:this.props.auth0.user.email\n    }\n\n    let url=`http://localhost:3010/addbook`;\n    \n    axios.post(url,bookInfo2).then((result)=>{\n      this.setState({\n        data:result.data,\n        \n      })\n\n    });\nconsole.log(bookInfo2);\n  }\n\n  deleteBook = async(index)=>{\n    const userName = {\n      email:this.props.auth0.user.email\n        }\n    let result = await axios.delete(`http://localhost:3010/deletebook/${index}`,{ params: userName })\n    this.setState({\n      data:result.data\n    })\n\n  }\n  componentDidMount = () => {\n    let server = process.env.REACT_APP_SERVER_URL;\n    let bookReqUrl = `${server}/books?email=${this.props.auth0.user.email}`;\n    console.log(server);\n    console.log(this.props.auth0.user.email);\n    axios.get(bookReqUrl).then((bookResult) => {\n      let dataBook = bookResult.data;\n      this.setState({\n     data: dataBook\n      })\n \n    });\n    \n    // console.log(this.state.data);\n    // console.log(this.state.dataBook);\n  };\n  render() {\n    // const { isAuthenticated } = this.props.auth0;\n    return (\n      <>\n          {/* {isAuthenticated && this.componentDidMount()} */}\n          <Jumbotron>\n            <h1>My Favorite Books</h1>\n            <p>This is a collection of my favorite books</p>\n          </Jumbotron>\n           <BookFormModal updateBook={this.updateModal}  flag={this.state.showModal}\n            bookInfo={this.getBookDataFromForm}/>\n            {this.updateONBook &&\n            <UpdateBookForm \n            item={this.state.item}\n            show={this.show}\n                     showUpdateModal={this.state.showUpdateModal}\n            bookInfo={this.getBookDataFromForm}\n            updateBook={this.updateBook}\n            handleName={this.setName}\n            handleDesc={this.setDescription}\n            handleStatus={this.setStatus}\n             />\n            }\n          {\n            this.state.data.length !==0 &&\n            this.state.data.map((item, indx) => {\n              return (\n                <Card className=\"text-center\" key={indx}>\n  \n                <Card.Body>\n                  <Card.Title>{item.name}</Card.Title>\n                  <Card.Text>\n                  {item.description}\n                  </Card.Text>\n                  {/* <Card.Text>\n                  {item.image}\n                  </Card.Text> */}\n                  <Button variant=\"primary\"  onClick={()=>this.deleteBook(indx)}>Delete</Button>\n                  <Button variant=\"primary\"   onClick={()=>this.updateONBook(indx,item)}>Update</Button>\n                </Card.Body>\n                <Card.Footer className=\"text-muted\">{item.status}</Card.Footer>\n              </Card>\n              );\n            })}\n      </>\n    );\n  }\n}\n\nexport default withAuth0(MyFavoriteBooks);"]},"metadata":{},"sourceType":"module"}