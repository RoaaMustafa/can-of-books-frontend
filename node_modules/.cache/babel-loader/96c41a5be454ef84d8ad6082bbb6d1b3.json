{"ast":null,"code":"var _jsxFileName = \"/home/roaa/301/can-of-books/can-of-books-frontend/src/myFavoriteBooks.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport { Card, Button } from 'react-bootstrap';\nimport \"./myFavoriteBooks.css\";\nimport axios from \"axios\"; // import { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { withAuth0 } from \"@auth0/auth0-react\"; // import Carousel from \"react-bootstrap/Carousel\";\n\nimport BookFormModal from \"./component/BookFormModal\";\nimport UpdateBookForm from \"./component/UpdateBookForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nclass MyFavoriteBooks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateModal = () => {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.updateONBook = indx => {\n      this.setState({\n        showUpdateModal: !this.state.showUpdateModal\n      });\n    };\n\n    this.setName = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.setDescription = e => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.setStatus = e => {\n      this.setState({\n        status: e.target.value\n      });\n    };\n\n    this.updateBook = async e => {\n      e.preventDefault();\n      const bookData = {\n        name: e.target.name.value,\n        description: e.target.description.value,\n        status: e.target.status.value,\n        email: this.props.auth0.user.email\n      };\n      console.log(bookData);\n      let updatedBook = await axios.put(`${this.state.server}/updateBook/${this.state.index}`, catData);\n      this.setState({\n        cats: catsData.data\n      });\n    };\n\n    this.getBookDataFromForm = event => {\n      event.preventDefault();\n      const bookInfo2 = {\n        name: event.target.name.value,\n        description: event.target.description.value,\n        status: event.target.status.value,\n        email: this.props.auth0.user.email\n      };\n      let url = `http://localhost:3010/addbook`;\n      axios.post(url, bookInfo2).then(result => {\n        this.setState({\n          data: result.data\n        });\n      });\n      console.log(bookInfo2);\n    };\n\n    this.deleteBook = async index => {\n      const userName = {\n        email: this.props.auth0.user.email\n      };\n      let result = await axios.delete(`http://localhost:3010/deletebook/${index}`, {\n        params: userName\n      });\n      this.setState({\n        data: result.data\n      });\n    };\n\n    this.componentDidMount = () => {\n      let server = process.env.REACT_APP_SERVER_URL;\n      let bookReqUrl = `${server}/books?email=${this.props.auth0.user.email}`;\n      console.log(server);\n      console.log(this.props.auth0.user.email);\n      axios.get(bookReqUrl).then(bookResult => {\n        let dataBook = bookResult.data;\n        this.setState({\n          data: dataBook\n        });\n      });\n      console.log(this.state.data); // console.log(this.state.data);\n      // console.log(this.state.dataBook);\n    };\n\n    this.state = {\n      data: [],\n      showModal: false,\n      showUpdateModal: false,\n      newBook: {},\n      index: 0\n    };\n  }\n\n  render() {\n    // const { isAuthenticated } = this.props.auth0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Favorite Books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is a collection of my favorite books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BookFormModal, {\n        updateBook: this.updateModal,\n        flag: this.state.showModal,\n        bookInfo: this.getBookDataFromForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }, this), this.updateONBook && /*#__PURE__*/_jsxDEV(UpdateBookForm, {\n        updateONBook: this.updateONBook,\n        showUpdateModal: this.state.showUpdateModal,\n        bookInfo: this.getBookDataFromForm,\n        updateBook: this.updateBook,\n        handleName: this.setName,\n        handleDesc: this.setDescription,\n        handleStatus: this.setStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), this.state.data.length !== 0 && this.state.data.map((item, indx) => {\n        return (\n          /*#__PURE__*/\n          // <Carousel.Item key={indx} interval={1000}>\n          //   <img\n          //     className=\"d-block w-100\"\n          //     src={item.image}\n          //     alt=\"slide\"\n          //   />\n          //   <Carousel.Caption>\n          //     <h3>{item.name}</h3>\n          //     <p>{item.description}</p>\n          //   </Carousel.Caption>\n          // </Carousel.Item>\n          _jsxDEV(Card, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => this.deleteBook(indx),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => this.updateONBook(indx),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-muted\",\n              children: item.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, indx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        );\n      })]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withAuth0(MyFavoriteBooks);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/roaa/301/can-of-books/can-of-books-frontend/src/myFavoriteBooks.js"],"names":["React","Jumbotron","Card","Button","axios","withAuth0","BookFormModal","UpdateBookForm","require","config","MyFavoriteBooks","Component","constructor","props","updateModal","setState","showModal","state","updateONBook","indx","showUpdateModal","setName","e","name","target","value","setDescription","description","setStatus","status","updateBook","preventDefault","bookData","email","auth0","user","console","log","updatedBook","put","server","index","catData","cats","catsData","data","getBookDataFromForm","event","bookInfo2","url","post","then","result","deleteBook","userName","delete","params","componentDidMount","process","env","REACT_APP_SERVER_URL","bookReqUrl","get","bookResult","dataBook","newBook","render","length","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport {Card,Button} from 'react-bootstrap';\nimport \"./myFavoriteBooks.css\";\nimport axios from \"axios\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\nimport { withAuth0 } from \"@auth0/auth0-react\";\n// import Carousel from \"react-bootstrap/Carousel\";\nimport BookFormModal from \"./component/BookFormModal\";\nimport UpdateBookForm from \"./component/UpdateBookForm\";\n\nrequire(\"dotenv\").config();\n\nclass MyFavoriteBooks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      showModal: false,\n      showUpdateModal:false,\n      newBook:{},\n      index:0\n    };\n  }\n  \n  updateModal=()=>{\n    this.setState({\n      showModal:!this.state.showModal,\n    });\n  }\n  \n  updateONBook=(indx)=>{\n    this.setState({\n      showUpdateModal:!this.state.showUpdateModal,\n\n    });\n  }\n  setName = (e) => {\n    this.setState({\n     name: e.target.value\n    })\n  }\n\n  setDescription = (e) => {\n    this.setState({\n      description: e.target.value\n    })\n  }\n  setStatus = (e) => {\n    this.setState({\n      status: e.target.value\n    })\n  }\n  updateBook = async(e) => {\n    e.preventDefault();\n    const bookData = {\n      name: e.target.name.value,\n      description: e.target.description.value,\n      status:e.target.status.value,\n      email:this.props.auth0.user.email\n    }\nconsole.log(bookData);\n    let updatedBook = await axios.put(`${this.state.server}/updateBook/${this.state.index}`,catData)\n\n   this.setState({\n  cats:catsData.data\n})\n  }\n  getBookDataFromForm=(event)=>{\n    event.preventDefault();\n    \n    const bookInfo2 = {\n      name: event.target.name.value,\n      description: event.target.description.value,\n      status:event.target.status.value,\n      email:this.props.auth0.user.email\n    }\n    let url=`http://localhost:3010/addbook`;\n    \n    axios.post(url,bookInfo2).then((result)=>{\n      this.setState({\n        data:result.data,\n        \n      })\n\n    });\nconsole.log(bookInfo2);\n  }\n\n  deleteBook = async(index)=>{\n    const userName = {\n      email:this.props.auth0.user.email\n        }\n    let result = await axios.delete(`http://localhost:3010/deletebook/${index}`,{ params: userName })\n    this.setState({\n      data:result.data\n    })\n\n  }\n  componentDidMount = () => {\n    let server = process.env.REACT_APP_SERVER_URL;\n    let bookReqUrl = `${server}/books?email=${this.props.auth0.user.email}`;\n    console.log(server);\n    console.log(this.props.auth0.user.email);\n    axios.get(bookReqUrl).then((bookResult) => {\n      let dataBook = bookResult.data;\n      this.setState({\n     data: dataBook\n      })\n \n    });\n    \n    console.log(this.state.data);\n    // console.log(this.state.data);\n    // console.log(this.state.dataBook);\n  };\n  render() {\n    // const { isAuthenticated } = this.props.auth0;\n    return (\n      <>\n        {/* <Carousel fade> */}\n          {/* {isAuthenticated && this.componentDidMount()} */}\n          <Jumbotron>\n            <h1>My Favorite Books</h1>\n            <p>This is a collection of my favorite books</p>\n          </Jumbotron>\n           <BookFormModal updateBook={this.updateModal}  flag={this.state.showModal}\n            bookInfo={this.getBookDataFromForm}/>\n            {this.updateONBook &&\n            <UpdateBookForm updateONBook={this.updateONBook} showUpdateModal={this.state.showUpdateModal}\n            bookInfo={this.getBookDataFromForm}\n            updateBook={this.updateBook}\n            handleName={this.setName}\n            handleDesc={this.setDescription}\n            handleStatus={this.setStatus}\n\n\n             />\n            }\n          {\n            this.state.data.length !==0 &&\n            this.state.data.map((item, indx) => {\n              return (\n                // <Carousel.Item key={indx} interval={1000}>\n                //   <img\n                //     className=\"d-block w-100\"\n                //     src={item.image}\n                //     alt=\"slide\"\n                //   />\n                //   <Carousel.Caption>\n                //     <h3>{item.name}</h3>\n                //     <p>{item.description}</p>\n                //   </Carousel.Caption>\n                // </Carousel.Item>\n                <Card className=\"text-center\" key={indx}>\n  \n                <Card.Body>\n                  <Card.Title>{item.name}</Card.Title>\n                  <Card.Text>\n                  {item.description}\n                  </Card.Text>\n                  {/* <Card.Text>\n                  {item.image}\n                  </Card.Text> */}\n                  <Button variant=\"primary\"  onClick={()=>this.deleteBook(indx)}>Delete</Button>\n                  <Button variant=\"primary\"  onClick={()=>this.updateONBook(indx)}>Update</Button>\n                </Card.Body>\n                <Card.Footer className=\"text-muted\">{item.status}</Card.Footer>\n              </Card>\n              );\n            })}\n        {/* </Carousel> */}\n      </>\n    );\n  }\n}\n\nexport default withAuth0(MyFavoriteBooks);"]},"metadata":{},"sourceType":"module"}